//Oleh :
  //Andhika Kurniawan - 1817051027
  //Ario Rinaldi - 1817051040
  //Kurnia Agung Firdaus - 1817051056
  //Muhammad Alamsyah - 1817051051
  
  
#include <iostream>
#include <cstring>
#define MAX_STACK_SIZE 20
using namespace std;

class stack {
	char data[MAX_STACK_SIZE];
	char top;
	
	public:
		stack() {
			top = -1;
		}
		
	
	void push(char input){
		if (top == MAX_STACK_SIZE-1) {
			cout << "Melebihi Batas Stack" << endl;
			return;
		}
		data[++top] = input;
	}
	
	void pop() {
		if (top == -1) {
			cout << "Stack Kosong" << endl;
			return;
		}
		top--;
	}
	
	int Top() {
		return data[top];
	}
	
	bool IsEmpty() {
		if (top == -1) {
			return true;
		}
		else {
			return false;
		}
	}
	
	void print() {
		int i;
		cout << "Stack : ";
		for (i = 0; i <= top; i++){
			cout << data[i] << " ";
		}
		cout << endl;
	}
};

int prec(char op) {
    if(op == '*' || op == '/'){
    	return 2;
	} else if (op == '+' || op == '-'){
	    return 1;
	} else {
	    return -1;
	}
}

int main () {
	stack s;
	string Q, P;
	int jumlah_Q, hasil;
	
	cout << "Masukkan ekspresi Infix ";
	getline(cin, Q);
	
	jumlah_Q = Q.length();
	
	for (int i=0 ;i < jumlah_Q; i++){
		if (Q[i] >= '0' && Q[i] <= '9'){
			P+= Q[i];
		}
		else if (Q[i] ==  '('){
			s.push(Q[i]);
		}
		else if (Q[i] == ')'){
			while (s.IsEmpty() != true && s.Top() != '('){
				char tmp = s.Top();
				s.pop();
				P+= tmp;
			}
			if (s.Top() == '('){
				s.pop();
			}
		}
		if (Q[i] == '+' || Q[i] == '-' || Q[i] == '*' || Q[i] == '/'){
			if (s.IsEmpty() == true || s.Top() == '('){
				s.push(Q[i]);
			}
		
		else{
			while (s.IsEmpty() != true && s.Top() != '(' && prec(Q[i]) <= prec(s.Top())){
				char tmp=s.Top();
				s.pop();
				P+= tmp;
			}
			s.push(Q[i]);
			}	
		}
	}
	
	while(s.IsEmpty() != true){
			char tmp=s.Top();
			s.pop();
			P+= tmp;
	}
	
	for(int i = 0 ;i < jumlah_Q; i++){
		if (P[i] >= '0' && P[i] <= '9'){
			s.push(P[i]);
		}
		if ( P[i]=='+' || P[i]=='-' || P[i]=='*' || P[i]=='/' ){
			int A = s.Top() - '0';  	
			s.pop();
			int B = s.Top() - '0'; 
			s.pop();			 
			if (P[i]=='+') {
				hasil = B + A;
				char tmphasil = hasil + '0'; 
				s.push(tmphasil);
			}
			else if (P[i]=='-') {
				hasil = B - A;
				char tmphasil = hasil + '0';
				s.push(tmphasil);
			}
			else if (P[i] =='*') {
				hasil = B * A;
				char tmphasil = hasil + '0';
				s.push(tmphasil);
			}
			else if (P[i]=='/') {
				hasil = B / A;
				char tmphasil = hasil + '0';
				s.push(tmphasil);
			}
		}
	}
	
	char charhasil = s.Top(); 
	int hasilakhir = charhasil - '0'; 
	
	cout << "Postfix : " << P << endl << endl;
	cout << "Hasil Akhir = " << hasilakhir << endl;
}
